/* C Program that implements prim algorithm to find the minimun
spanning tree (MST) of a graph.
*/

#include <stdio.h>

#define MAX 100
#define INF 9999  // Representing infinity

int minKey(int key[], int mstSet[], int V) {
    int min = INF, min_index = -1;

    for (int v = 0; v < V; v++) {
        if (mstSet[v] == 0 && key[v] < min) {
            min = key[v];
            min_index = v;
        }
    }

    return min_index;
}

void primMST(int graph[MAX][MAX], int V) {
    int parent[V];   // Store MST
    int key[V];      // Used to pick minimum weight edge
    int mstSet[V];   // Track vertices included in MST

    for (int i = 0; i < V; i++) {
        key[i] = INF;
        mstSet[i] = 0;
    }

    key[0] = 0;
    parent[0] = -1;

    for (int count = 0; count < V - 1; count++) {
        int u = minKey(key, mstSet, V);
        mstSet[u] = 1;

        for (int v = 0; v < V; v++) {
            if (graph[u][v] && mstSet[v] == 0 && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }

    int totalWeight = 0;
    printf("\nEdges in the Minimum Spanning Tree:\n");
    for (int i = 1; i < V; i++) {
        printf("%d -- %d == %d\n", parent[i], i, graph[i][parent[i]]);
        totalWeight += graph[i][parent[i]];
    }
    printf("Total weight of MST = %d\n", totalWeight);
}

int main() {
    int V, E;
    int graph[MAX][MAX] = {0};

    printf("Enter number of vertices: ");
    scanf("%d", &V);

    printf("Enter number of edges: ");
    scanf("%d", &E);

    printf("Enter edges (u v weight):\n");
    for (int i = 0; i < E; i++) {
        int u, v, w;
        printf("Edge %d: ", i + 1);
        scanf("%d %d %d", &u, &v, &w);
        graph[u][v] = w;
        graph[v][u] = w;  // Since the graph is undirected
    }

    primMST(graph, V);

    return 0;
}

/* OUTPUT
Enter number of vertices: 6
Enter number of edges: 9
Enter edges (u v weight):
Edge 1: 0 1 6
Edge 2: 0 2 3
Edge 3: 1 4 1
Edge 4: 4 3 5
Edge 5: 2 3 1
Edge 6: 4 5 8
Edge 7: 5 0 4
Edge 8: 0 4 5
Edge 9: 1 2 2

Edges in the Minimum Spanning Tree:
1 -- 4 == 1
2 -- 3 == 1
1 -- 2 == 2
0 -- 2 == 3
5 -- 0 == 4
Total weight of MST = 11
*/
