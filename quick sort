// C Program to sort an array of integers using Quick Sort using recursion

#include<stdio.h>
#include<stdlib.h>

int partition(int a[], int l, int h) {
    int p = a[h];
    int i = l - 1, j, temp;
    for(j = l; j < h; j++) {
        if(a[j] < p) {
            i++;
            temp = a[i];
            a[i] = a[j];
            a[j] = temp;
        }
    }
    temp = a[i + 1];
    a[i + 1] = a[h];
    a[h] = temp;
    return i + 1;
}

void quick_sort(int a[], int l, int h) {
    if(l < h) {
        int p = partition(a,l,h);
        quick_sort(a, l, p - 1);
        quick_sort(a, p + 1, h);
    }
}

int main() {
    int n;
    printf("Enter number of elements in the array: ");
    scanf("%d",&n);
    int a[n];
    printf("Enter elements in the array: ");
    for(int i = 0; i < n; i++) {
        scanf("%d",&a[i]);
    }
    quick_sort(a, 0, n - 1);
    printf("Sorted array: ");
    for(int i = 0; i < n; i++) {
        printf("%d ",a[i]);
    }
    return 0;
}

/* OUTPUT
Enter number of elements in the array: 4
Enter elements in the array: 23 54 5 8
Sorted array: 5 8 23 54 
*/
