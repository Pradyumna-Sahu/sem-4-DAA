//C program where suppose you are given with a set of N denominations 500,200,100,50,20,10,5,2,1. Using greedy method find minimum number coins to carry a total value of V(17333). The output should be in tabular format.Also find the total number of coins used.
StNo	Denominations	Value(V)	CoinsUsed	RemainingValue	AccumulatedValue
1	500		17333		34		333		17000
2	200		333		1		133		200
3	100		133		1		33		100

#include <stdio.h>

int main() {
    int denominations[] = {500, 200, 100, 50, 20, 10, 5, 2, 1};
    int n = sizeof(denominations) / sizeof(denominations[0]);
    int value = 17333;
    int remainingValue = value;
    int totalCoinsUsed = 0;

    printf("SlNo\tDenominations\tValue(V)\tCoinsUsed\tRemainingValue\tAccumulatedValue\n");

    for (int i = 0; i < n; i++) {
        int coinsUsed = remainingValue / denominations[i];  // Calculate number of coins of current denomination
        int accumulatedValue = coinsUsed * denominations[i]; // Calculate accumulated value for this denomination
        remainingValue -= accumulatedValue;  // Subtract accumulated value from remaining value

        // Print the current step
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n", 
            i + 1, 
            denominations[i], 
            value, 
            coinsUsed, 
            remainingValue, 
            accumulatedValue);
        
        totalCoinsUsed += coinsUsed; // Update total number of coins used
    }

    printf("\nTotal number of coins used: %d\n", totalCoinsUsed);

    return 0;
}

/* OUTPUT
SlNo	Denominations	Value(V)	CoinsUsed	RemainingValue	AccumulatedValue
1	500		17333		34		333		17000
2	200		17333		1		133		200
3	100		17333		1		33		100
4	50		17333		0		33		0
5	20		17333		1		13		20
6	10		17333		1		3		10
7	5		17333		0		3		0
8	2		17333		1		1		2
9	1		17333		1		0		1

Total number of coins used: 40
*/

#include <stdio.h>

int main() {
    int denominations[] = {500, 200, 100, 50, 20, 10, 5, 2, 1};
    int numDenominations = sizeof(denominations) / sizeof(denominations[0]);
    int value = 17333;
    int coinsUsed[numDenominations];
    int remainingValue = value;
    int accumulatedValue = 0;
    int totalCoins = 0;

    for (int i = 0; i < numDenominations; i++) {
        coinsUsed[i] = 0;
    }

    printf("StNo\tDenominations\tValue(V)\tCoinsUsed\tRemainingValue\tAccumulatedValue\n");

    int stNo = 1;
    for (int i = 0; i < numDenominations; i++) {
        coinsUsed[i] = remainingValue / denominations[i];
        if (coinsUsed[i] > 0) {

            printf("%d\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n",
                   stNo,
                   denominations[i],
                   remainingValue,
                   coinsUsed[i],
                   remainingValue % denominations[i],
                   accumulatedValue);

            accumulatedValue += coinsUsed[i] * denominations[i];
            remainingValue %= denominations[i];

            totalCoins += coinsUsed[i];
            stNo++;
        }
    }

    printf("\nTotal number of coins used: %d\n", totalCoins);

    return 0;
}

/* OUTPUT
StNo	Denominations	Value(V)	CoinsUsed	RemainingValue	AccumulatedValue
1	500		17333		34		333		0
2	200		333		1		133		17000
3	100		133		1		33		17200
4	20		33		1		13		17300
5	10		13		1		3		17320
6	2		3		1		1		17330
7	1		1		1		0		17332

Total number of coins used: 40
*/
